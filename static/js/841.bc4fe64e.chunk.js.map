{"version":3,"file":"static/js/841.bc4fe64e.chunk.js","mappings":"0hBASMA,GAAgBC,EAAAA,EAAAA,OAClB,SAACC,G,MACGC,EAEmCD,EAFnCC,UACAC,EACmCF,EADnCE,K,EACmCF,EAAnCG,6BAAAA,OAAAA,IAA+B,KAC5BC,EAAKC,EAAAA,EAJX,qDAMWC,EAAsBL,EAAtBK,MAAOC,EAAeN,EAAfM,IAAKC,EAAUP,EAAVO,MAEZC,EAAgBP,EAAhBO,IAAKC,EAAWR,EAAXQ,OAELC,GAAOC,EAAAA,EAAAA,KAAPD,GAER,GAA0DE,EAAAA,EAAAA,WAAS,GAAnE,eAAOC,EAAP,KAA8BC,EAA9B,KAEMC,GAAWC,EAAAA,EAAAA,mBAAoD,SAAAC,GACjEA,EAAEC,iBAEFJ,GAAyB,GAELG,EAAEE,OAEVC,QACf,IAED,OACIC,EAAAA,cAACC,EAAAA,EAAQC,OAAAA,OAAAA,CAAAA,EAAAA,OAAAA,OAAAA,CACCvB,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCC,GAAK,CAC7DqB,WAAYhB,EAAI,WAChBiB,SACIJ,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,WACJL,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,mBACJL,EAAAA,cAAAA,OAAAA,CAAMK,GAAG,gBAAgBX,SAAUA,EAAUY,OAAQrB,EAAIsB,YAAaC,OAAO,QACzER,EAAAA,cAAAA,MAAAA,CAAKS,UAAWpB,EAAGP,EAAM4B,mBACrBV,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,QAAAA,CAAOW,QAAQ,WAAWF,UAAWpB,EAAGP,EAAM8B,eACzCzB,EAAI,aAETa,EAAAA,cAAAA,QAAAA,CACIa,SAAU,EACVR,GAAG,WACHI,UAAWpB,EAAGP,EAAMgC,cACpBC,KAAK,WACLC,KAAK,WACLC,WAAW,EACXC,aAAa,KACbC,aAA4B,QAAd,EAAAjC,EAAMkC,gBAAQC,IAAAA,EAAAA,EAAI,MAGxCrB,EAAAA,cAAAA,MAAAA,CAAKS,UAAWpB,EAAGP,EAAM4B,iBAAkB5B,EAAMwC,qBAC7CtB,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,oBACRL,EAAAA,cAAAA,MAAAA,CAAKS,UAAWpB,EAAGP,EAAMyC,4BACpBvC,EAAMwC,sBACHxB,EAAAA,cAAAA,OAAAA,KACIA,EAAAA,cAAAA,IAAAA,CAAGa,SAAU,EAAGY,KAAMxC,EAAIyC,0BACrBvC,EAAI,wBAMzBa,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,kBAAkBI,UAAWpB,EAAGP,EAAM4B,mBAC1CV,EAAAA,cAAAA,QAAAA,CACIa,SAAU,EACVJ,UAAWpB,EACPP,EAAM6C,cACN7C,EAAM8C,qBACN9C,EAAM+C,mBACN/C,EAAMgD,oBAEVf,KAAK,QACLV,GAAG,WACHW,KAAK,SACLe,MAAO3C,EAAO,WACd4C,SAAUxC,UAS7C,IAGL,W","sources":["../node_modules/keycloakify/src/lib/components/LoginPassword.tsx"],"sourcesContent":["import React, { useState, memo } from \"react\";\nimport Template from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport { useConstCallback } from \"powerhooks/useConstCallback\";\nimport type { FormEventHandler } from \"react\";\nimport type { I18n } from \"../i18n\";\n\nconst LoginPassword = memo(\n    ({\n        kcContext,\n        i18n,\n        doFetchDefaultThemeResources = true,\n        ...props\n    }: { kcContext: KcContextBase.LoginPassword; i18n: I18n; doFetchDefaultThemeResources?: boolean } & KcProps) => {\n        const { realm, url, login } = kcContext;\n\n        const { msg, msgStr } = i18n;\n\n        const { cx } = useCssAndCx();\n\n        const [isLoginButtonDisabled, setIsLoginButtonDisabled] = useState(false);\n\n        const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n            e.preventDefault();\n\n            setIsLoginButtonDisabled(true);\n\n            const formElement = e.target as HTMLFormElement;\n\n            formElement.submit();\n        });\n\n        return (\n            <Template\n                {...{ kcContext, i18n, doFetchDefaultThemeResources, ...props }}\n                headerNode={msg(\"doLogIn\")}\n                formNode={\n                    <div id=\"kc-form\">\n                        <div id=\"kc-form-wrapper\">\n                            <form id=\"kc-form-login\" onSubmit={onSubmit} action={url.loginAction} method=\"post\">\n                                <div className={cx(props.kcFormGroupClass)}>\n                                    <hr />\n                                    <label htmlFor=\"password\" className={cx(props.kcLabelClass)}>\n                                        {msg(\"password\")}\n                                    </label>\n                                    <input\n                                        tabIndex={2}\n                                        id=\"password\"\n                                        className={cx(props.kcInputClass)}\n                                        name=\"password\"\n                                        type=\"password\"\n                                        autoFocus={true}\n                                        autoComplete=\"on\"\n                                        defaultValue={login.password ?? \"\"}\n                                    />\n                                </div>\n                                <div className={cx(props.kcFormGroupClass, props.kcFormSettingClass)}>\n                                    <div id=\"kc-form-options\" />\n                                    <div className={cx(props.kcFormOptionsWrapperClass)}>\n                                        {realm.resetPasswordAllowed && (\n                                            <span>\n                                                <a tabIndex={5} href={url.loginResetCredentialsUrl}>\n                                                    {msg(\"doForgotPassword\")}\n                                                </a>\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                                <div id=\"kc-form-buttons\" className={cx(props.kcFormGroupClass)}>\n                                    <input\n                                        tabIndex={4}\n                                        className={cx(\n                                            props.kcButtonClass,\n                                            props.kcButtonPrimaryClass,\n                                            props.kcButtonBlockClass,\n                                            props.kcButtonLargeClass\n                                        )}\n                                        name=\"login\"\n                                        id=\"kc-login\"\n                                        type=\"submit\"\n                                        value={msgStr(\"doLogIn\")}\n                                        disabled={isLoginButtonDisabled}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                }\n            />\n        );\n    }\n);\n\nexport default LoginPassword;\n"],"names":["LoginPassword","memo","_a","kcContext","i18n","doFetchDefaultThemeResources","props","__rest","realm","url","login","msg","msgStr","cx","useCssAndCx","useState","isLoginButtonDisabled","setIsLoginButtonDisabled","onSubmit","useConstCallback","e","preventDefault","target","submit","React","Template","Object","headerNode","formNode","id","action","loginAction","method","className","kcFormGroupClass","htmlFor","kcLabelClass","tabIndex","kcInputClass","name","type","autoFocus","autoComplete","defaultValue","password","_b","kcFormSettingClass","kcFormOptionsWrapperClass","resetPasswordAllowed","href","loginResetCredentialsUrl","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass","value","disabled"],"sourceRoot":""}