{"version":3,"file":"static/js/8.044d0573.chunk.js","mappings":"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","sources":["../node_modules/keycloakify/src/lib/components/LoginUpdateProfile.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport Template from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport type { I18n } from \"../i18n\";\n\nconst LoginUpdateProfile = memo(\n    ({\n        kcContext,\n        i18n,\n        doFetchDefaultThemeResources = true,\n        ...props\n    }: { kcContext: KcContextBase.LoginUpdateProfile; i18n: I18n; doFetchDefaultThemeResources?: boolean } & KcProps) => {\n        const { cx } = useCssAndCx();\n\n        const { msg, msgStr } = i18n;\n\n        const { url, user, messagesPerField, isAppInitiatedAction } = kcContext;\n\n        return (\n            <Template\n                {...{ kcContext, i18n, doFetchDefaultThemeResources, ...props }}\n                headerNode={msg(\"loginProfileTitle\")}\n                formNode={\n                    <form id=\"kc-update-profile-form\" className={cx(props.kcFormClass)} action={url.loginAction} method=\"post\">\n                        {user.editUsernameAllowed && (\n                            <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"username\", props.kcFormGroupErrorClass))}>\n                                <div className={cx(props.kcLabelWrapperClass)}>\n                                    <label htmlFor=\"username\" className={cx(props.kcLabelClass)}>\n                                        {msg(\"username\")}\n                                    </label>\n                                </div>\n                                <div className={cx(props.kcInputWrapperClass)}>\n                                    <input\n                                        type=\"text\"\n                                        id=\"username\"\n                                        name=\"username\"\n                                        defaultValue={user.username ?? \"\"}\n                                        className={cx(props.kcInputClass)}\n                                    />\n                                </div>\n                            </div>\n                        )}\n\n                        <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"email\", props.kcFormGroupErrorClass))}>\n                            <div className={cx(props.kcLabelWrapperClass)}>\n                                <label htmlFor=\"email\" className={cx(props.kcLabelClass)}>\n                                    {msg(\"email\")}\n                                </label>\n                            </div>\n                            <div className={cx(props.kcInputWrapperClass)}>\n                                <input type=\"text\" id=\"email\" name=\"email\" defaultValue={user.email ?? \"\"} className={cx(props.kcInputClass)} />\n                            </div>\n                        </div>\n\n                        <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"firstName\", props.kcFormGroupErrorClass))}>\n                            <div className={cx(props.kcLabelWrapperClass)}>\n                                <label htmlFor=\"firstName\" className={cx(props.kcLabelClass)}>\n                                    {msg(\"firstName\")}\n                                </label>\n                            </div>\n                            <div className={cx(props.kcInputWrapperClass)}>\n                                <input\n                                    type=\"text\"\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    defaultValue={user.firstName ?? \"\"}\n                                    className={cx(props.kcInputClass)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className={cx(props.kcFormGroupClass, messagesPerField.printIfExists(\"lastName\", props.kcFormGroupErrorClass))}>\n                            <div className={cx(props.kcLabelWrapperClass)}>\n                                <label htmlFor=\"lastName\" className={cx(props.kcLabelClass)}>\n                                    {msg(\"lastName\")}\n                                </label>\n                            </div>\n                            <div className={cx(props.kcInputWrapperClass)}>\n                                <input\n                                    type=\"text\"\n                                    id=\"lastName\"\n                                    name=\"lastName\"\n                                    defaultValue={user.lastName ?? \"\"}\n                                    className={cx(props.kcInputClass)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className={cx(props.kcFormGroupClass)}>\n                            <div id=\"kc-form-options\" className={cx(props.kcFormOptionsClass)}>\n                                <div className={cx(props.kcFormOptionsWrapperClass)} />\n                            </div>\n\n                            <div id=\"kc-form-buttons\" className={cx(props.kcFormButtonsClass)}>\n                                {isAppInitiatedAction ? (\n                                    <>\n                                        <input\n                                            className={cx(props.kcButtonClass, props.kcButtonPrimaryClass, props.kcButtonLargeClass)}\n                                            type=\"submit\"\n                                            defaultValue={msgStr(\"doSubmit\")}\n                                        />\n                                        <button\n                                            className={cx(props.kcButtonClass, props.kcButtonDefaultClass, props.kcButtonLargeClass)}\n                                            type=\"submit\"\n                                            name=\"cancel-aia\"\n                                            value=\"true\"\n                                        >\n                                            {msg(\"doCancel\")}\n                                        </button>\n                                    </>\n                                ) : (\n                                    <input\n                                        className={cx(\n                                            props.kcButtonClass,\n                                            props.kcButtonPrimaryClass,\n                                            props.kcButtonBlockClass,\n                                            props.kcButtonLargeClass\n                                        )}\n                                        type=\"submit\"\n                                        defaultValue={msgStr(\"doSubmit\")}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    </form>\n                }\n            />\n        );\n    }\n);\n\nexport default LoginUpdateProfile;\n"],"names":["LoginUpdateProfile","memo","_a","kcContext","i18n","doFetchDefaultThemeResources","props","__rest","cx","useCssAndCx","msg","msgStr","url","user","messagesPerField","isAppInitiatedAction","React","Template","Object","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","editUsernameAllowed","kcFormGroupClass","printIfExists","kcFormGroupErrorClass","kcLabelWrapperClass","htmlFor","kcLabelClass","kcInputWrapperClass","type","name","defaultValue","username","_b","kcInputClass","email","_c","firstName","_d","lastName","_e","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonLargeClass","kcButtonDefaultClass","value","kcButtonBlockClass"],"sourceRoot":""}