{"version":3,"file":"static/js/317.89d110aa.chunk.js","mappings":"2hBASMA,GAAWC,EAAAA,EAAAA,OACb,SAACC,G,IACGC,EAEmCD,EAFnCC,UACAC,EACmCF,EADnCE,K,EACmCF,EAAnCG,6BAAAA,OAAAA,IAA+B,KAC5BC,EAAKC,EAAAA,EAJX,qDAMWC,EAAkBL,EAAlBK,SAAUC,EAAQN,EAARM,IAEVC,GAAOC,EAAAA,EAAAA,KAAPD,GAEAE,EAAgBR,EAAhBQ,IAAKC,EAAWT,EAAXS,OAmBb,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAIC,GAAc,EAWlB,OATAC,EAAAA,EAAAA,GAAW,CACP,KAAQ,aACR,KAAOC,EAAAA,EAAAA,UAASd,EAAUM,IAAIS,oBAAqB,4CACpDC,MAAK,WACAJ,GAyEhBK,EAAEC,UAAUC,OAAM,WAEdF,EAAE,+BAA+BG,OAAM,WAC/BH,EAAEI,MAAMC,SAAS,WACjBL,EAAEI,MAAME,YAAY,UACpBN,EAAEI,MAAMG,WAAWC,WAAW,UAE9BR,EAAE,+BAA+BM,YAAY,UAC7CN,EAAE,+BAA+BO,WAAWC,WAAW,QACvDR,EAAEI,MAAMK,SAAS,UACjBT,EAAEI,MAAMG,WAAWG,KAAK,OAAQ,wBAEvC,IAED,IAAIC,EAAcX,EAAE,+BAA+B,GAC/CW,GACAA,EAAYR,OAEnB,GAxFQ,IAEM,WACHR,GAAc,CACjB,CACJ,GAAE,IAGCiB,EAAAA,cAACC,EAAAA,EAAQC,OAAAA,OAAAA,CAAAA,EAAAA,OAAAA,OAAAA,CACC/B,UAAAA,EAAWC,KAAAA,EAAMC,6BAAAA,GAAiCC,GAAK,CAC7D6B,WAAYvB,EAAI,WAChBwB,SACIJ,EAAAA,cAAAA,OAAAA,CAAMK,GAAG,oBAAoBC,UAAW5B,EAAGJ,EAAMiC,aAAcC,OAAQ/B,EAAIgC,YAAaC,OAAO,QAC1FlC,EAASmC,mBAAmBC,OAAS,GAClCZ,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAMuC,mBACrBb,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAMwC,sBACpBtC,EAASmC,mBAAmBI,KAAI,SAAAC,GAAa,OAC1ChB,EAAAA,cAAAA,MAAAA,CAAKiB,IAAKD,EAAcX,GAAIC,UAAW5B,EAAGJ,EAAM4C,uBAC5ClB,EAAAA,cAAAA,QAAAA,CAAOmB,KAAK,SAASC,MAAM,wBAC3BpB,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAM+C,2BACrBrB,EAAAA,cAAAA,OAAAA,CAAMM,UAAW5B,EAAGJ,EAAMgD,iCAC1BtB,EAAAA,cAAAA,KAAAA,CAAIM,UAAW5B,EAAGJ,EAAMiD,8BAA+BP,EAAcQ,YALnC,MAY1DxB,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAMuC,mBACrBb,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAMmD,sBACrBzB,EAAAA,cAAAA,QAAAA,CAAO0B,QAAQ,MAAMpB,UAAW5B,EAAGJ,EAAMqD,eACpC/C,EAAI,qBAIboB,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAMwC,sBACrBd,EAAAA,cAAAA,QAAAA,CAAOK,GAAG,MAAMuB,KAAK,MAAMC,aAAa,MAAMV,KAAK,OAAOb,UAAW5B,EAAGJ,EAAMwD,cAAeC,WAAS,MAI9G/B,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAMuC,mBACrBb,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,kBAAkBC,UAAW5B,EAAGJ,EAAM0D,qBAC1ChC,EAAAA,cAAAA,MAAAA,CAAKM,UAAW5B,EAAGJ,EAAM2D,8BAG7BjC,EAAAA,cAAAA,MAAAA,CAAKK,GAAG,kBAAkBC,UAAW5B,EAAGJ,EAAM4D,qBAC1ClC,EAAAA,cAAAA,QAAAA,CACIM,UAAW5B,EACPJ,EAAM6D,cACN7D,EAAM8D,qBACN9D,EAAM+D,mBACN/D,EAAMgE,oBAEVV,KAAK,QACLvB,GAAG,WACHc,KAAK,SACLC,MAAOvC,EAAO,kBAQ7C,IA2BL,W","sources":["../node_modules/keycloakify/src/lib/components/LoginOtp.tsx"],"sourcesContent":["import React, { useEffect, memo } from \"react\";\nimport Template from \"./Template\";\nimport type { KcProps } from \"./KcProps\";\nimport type { KcContextBase } from \"../getKcContext/KcContextBase\";\nimport { headInsert } from \"../tools/headInsert\";\nimport { pathJoin } from \"../../bin/tools/pathJoin\";\nimport { useCssAndCx } from \"../tools/useCssAndCx\";\nimport type { I18n } from \"../i18n\";\n\nconst LoginOtp = memo(\n    ({\n        kcContext,\n        i18n,\n        doFetchDefaultThemeResources = true,\n        ...props\n    }: { kcContext: KcContextBase.LoginOtp; i18n: I18n; doFetchDefaultThemeResources?: boolean } & KcProps) => {\n        const { otpLogin, url } = kcContext;\n\n        const { cx } = useCssAndCx();\n\n        const { msg, msgStr } = i18n;\n\n        useEffect(() => {\n            let isCleanedUp = false;\n\n            headInsert({\n                \"type\": \"javascript\",\n                \"src\": pathJoin(kcContext.url.resourcesCommonPath, \"node_modules/jquery/dist/jquery.min.js\")\n            }).then(() => {\n                if (isCleanedUp) return;\n\n                evaluateInlineScript();\n            });\n\n            return () => {\n                isCleanedUp = true;\n            };\n        }, []);\n\n        return (\n            <Template\n                {...{ kcContext, i18n, doFetchDefaultThemeResources, ...props }}\n                headerNode={msg(\"doLogIn\")}\n                formNode={\n                    <form id=\"kc-otp-login-form\" className={cx(props.kcFormClass)} action={url.loginAction} method=\"post\">\n                        {otpLogin.userOtpCredentials.length > 1 && (\n                            <div className={cx(props.kcFormGroupClass)}>\n                                <div className={cx(props.kcInputWrapperClass)}>\n                                    {otpLogin.userOtpCredentials.map(otpCredential => (\n                                        <div key={otpCredential.id} className={cx(props.kcSelectOTPListClass)}>\n                                            <input type=\"hidden\" value=\"${otpCredential.id}\" />\n                                            <div className={cx(props.kcSelectOTPListItemClass)}>\n                                                <span className={cx(props.kcAuthenticatorOtpCircleClass)} />\n                                                <h2 className={cx(props.kcSelectOTPItemHeadingClass)}>{otpCredential.userLabel}</h2>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        )}\n                        <div className={cx(props.kcFormGroupClass)}>\n                            <div className={cx(props.kcLabelWrapperClass)}>\n                                <label htmlFor=\"otp\" className={cx(props.kcLabelClass)}>\n                                    {msg(\"loginOtpOneTime\")}\n                                </label>\n                            </div>\n\n                            <div className={cx(props.kcInputWrapperClass)}>\n                                <input id=\"otp\" name=\"otp\" autoComplete=\"off\" type=\"text\" className={cx(props.kcInputClass)} autoFocus />\n                            </div>\n                        </div>\n\n                        <div className={cx(props.kcFormGroupClass)}>\n                            <div id=\"kc-form-options\" className={cx(props.kcFormOptionsClass)}>\n                                <div className={cx(props.kcFormOptionsWrapperClass)} />\n                            </div>\n\n                            <div id=\"kc-form-buttons\" className={cx(props.kcFormButtonsClass)}>\n                                <input\n                                    className={cx(\n                                        props.kcButtonClass,\n                                        props.kcButtonPrimaryClass,\n                                        props.kcButtonBlockClass,\n                                        props.kcButtonLargeClass\n                                    )}\n                                    name=\"login\"\n                                    id=\"kc-login\"\n                                    type=\"submit\"\n                                    value={msgStr(\"doLogIn\")}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                }\n            />\n        );\n    }\n);\n\ndeclare const $: any;\n\nfunction evaluateInlineScript() {\n    $(document).ready(function () {\n        // Card Single Select\n        $(\".card-pf-view-single-select\").click(function (this: any) {\n            if ($(this).hasClass(\"active\")) {\n                $(this).removeClass(\"active\");\n                $(this).children().removeAttr(\"name\");\n            } else {\n                $(\".card-pf-view-single-select\").removeClass(\"active\");\n                $(\".card-pf-view-single-select\").children().removeAttr(\"name\");\n                $(this).addClass(\"active\");\n                $(this).children().attr(\"name\", \"selectedCredentialId\");\n            }\n        });\n\n        var defaultCred = $(\".card-pf-view-single-select\")[0];\n        if (defaultCred) {\n            defaultCred.click();\n        }\n    });\n}\n\nexport default LoginOtp;\n"],"names":["LoginOtp","memo","_a","kcContext","i18n","doFetchDefaultThemeResources","props","__rest","otpLogin","url","cx","useCssAndCx","msg","msgStr","useEffect","isCleanedUp","headInsert","pathJoin","resourcesCommonPath","then","$","document","ready","click","this","hasClass","removeClass","children","removeAttr","addClass","attr","defaultCred","React","Template","Object","headerNode","formNode","id","className","kcFormClass","action","loginAction","method","userOtpCredentials","length","kcFormGroupClass","kcInputWrapperClass","map","otpCredential","key","kcSelectOTPListClass","type","value","kcSelectOTPListItemClass","kcAuthenticatorOtpCircleClass","kcSelectOTPItemHeadingClass","userLabel","kcLabelWrapperClass","htmlFor","kcLabelClass","name","autoComplete","kcInputClass","autoFocus","kcFormOptionsClass","kcFormOptionsWrapperClass","kcFormButtonsClass","kcButtonClass","kcButtonPrimaryClass","kcButtonBlockClass","kcButtonLargeClass"],"sourceRoot":""}